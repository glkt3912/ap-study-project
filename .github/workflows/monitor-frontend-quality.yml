name: Frontend Quality Monitoring (Root)

on:
  # Monitor when frontend PR is merged (avoid duplicate with frontend CI)
  push:
    branches: [ main ]
    paths:
      - 'ap-study-app/**'
  # Weekly quality report
  schedule:
    - cron: '0 10 * * 1'  # Every Monday 10:00 UTC
  # Manual trigger for quality analysis
  workflow_dispatch:

defaults:
  run:
    working-directory: ap-study-app

jobs:
  frontend-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.17.1'
        cache: 'npm'
        cache-dependency-path: ap-study-app/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Run linting with detailed output
      run: npm run lint

    - name: Run type checking
      run: npm run type-check || true  # Non-blocking for monitoring

    - name: Analyze bundle size
      run: |
        echo "## 📦 Bundle Size Analysis" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -f ".next/analyze/client.html" ]; then
          echo "Bundle analysis completed - check artifacts" >> $GITHUB_STEP_SUMMARY
        else
          echo "No bundle analysis available" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Run Lighthouse CI (Performance)
      run: |
        echo "## 🚀 Performance Analysis" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Metric | Score |" >> $GITHUB_STEP_SUMMARY
        echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| Performance | TBD |" >> $GITHUB_STEP_SUMMARY
        echo "| Accessibility | TBD |" >> $GITHUB_STEP_SUMMARY
        echo "| Best Practices | TBD |" >> $GITHUB_STEP_SUMMARY
        echo "| SEO | TBD |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "> 🔄 Lighthouse CI integration planned for future implementation" >> $GITHUB_STEP_SUMMARY

    - name: Frontend Quality Summary
      run: |
        echo "## 📊 Frontend Quality Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build Status" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Dependencies installed successfully" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ TypeScript compilation successful" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Next.js build successful" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Code Quality" >> $GITHUB_STEP_SUMMARY
        echo "- 📋 ESLint validation completed" >> $GITHUB_STEP_SUMMARY
        echo "- 🔍 Type checking completed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Performance" >> $GITHUB_STEP_SUMMARY
        echo "- 📦 Bundle size analysis available" >> $GITHUB_STEP_SUMMARY
        echo "- 🚀 Performance metrics monitored" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "> 🤖 Generated by frontend-quality workflow"

  quality-gate:
    runs-on: ubuntu-latest
    needs: frontend-quality
    if: always()
    
    steps:
    - name: Frontend Quality Gate Check
      run: |
        if [ "${{ needs.frontend-quality.result }}" != "success" ]; then
          echo "❌ Frontend quality gate failed"
          echo "::error::Frontend quality requirements not satisfied"
          exit 1
        else
          echo "✅ Frontend quality gate passed"
        fi